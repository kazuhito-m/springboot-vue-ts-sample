buildscript {
    ext {
        springBootVersion = '2.1.6.RELEASE'
        encoding = 'UTF-8'
        compatibility = 1.11
    }
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:1.3.1")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'

group = 'com.github.kazuhito_m'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = compatibility
targetCompatibility = compatibility

repositories {
    jcenter()
}

node {
    version = '10.16.0'
    download = true
    nodeModulesDir = file("${project.projectDir}/front")
}

// front(TypeScript)を予めビルドする依存設定。
processResources.dependsOn npm_run_build
npm_run_build.dependsOn npm_install

test.dependsOn npm_test

clean.dependsOn npm_run_clean
npm_run_clean.dependsOn npm_install


sourceSets {
    main {
        resources {
            srcDir file("front/dist")
        }
    }
}

// JavaクラスとSQLファイルの出力先ディレクトリを同じにし、コンパイルより前にSQLファイルを出力先ディレクトリにコピーする。
processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources


dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    annotationProcessor("org.seasar.doma:doma:2.24.0")
    implementation("org.seasar.doma:doma:2.24.0")
    implementation("org.seasar.doma.boot:doma-spring-boot-starter:1.1.1")
    implementation("org.springframework.boot:spring-boot-starter-jdbc")

    runtime("com.h2database:h2:1.4.196")

    testImplementation('org.springframework.boot:spring-boot-starter-test')
}
